wasmflow_sdk::v1::types::CollectionSignature {
  name: {{#if name}}Some("{{name}}".to_owned()){{else}}None{{/if}},
  features: wasmflow_sdk::v1::types::CollectionFeatures {
    streaming: false,
    stateful: {{#if @root.stateful}}true{{else}}false{{/if}},
    version: wasmflow_sdk::v1::types::CollectionVersion::V0
  },
  format: 1,
  version: "{{version}}".to_owned(),
  types: std::collections::HashMap::from([
  {{#each types}}
    {{#switch type}}
      {{#case "struct"}}
      (
        "{{@key}}".to_owned(),
        wasmflow_sdk::v1::types::TypeDefinition::Struct(wasmflow_sdk::v1::types::StructSignature{
          name:"{{name}}".to_owned(),
          fields: std::collections::HashMap::from([
          {{#each fields}}
            ("{{@key}}".to_owned(),{{> type-signature .}}),
          {{/each}}
          ]).into()
        })
      ),
      {{/case}}
      {{#case "enum"}}
      (
        "{{@key}}".to_owned(),
        wasmflow_sdk::v1::types::TypeDefinition::Enum(wasmflow_sdk::v1::types::EnumSignature{
          name:"{{name}}".to_owned(),
          values: vec![
          {{#each values}}
            wasmflow_sdk::v1::types::EnumVariant::new("{{index}}",{{index}}),
          {{/each}}
          ]
        })
      ),
      {{/case}}
      {{#default}}
        {{log .}}
        {{panic "unhandled type"}}
      {{/default}}
    {{/switch}}
  {{/each}}
  ]).into(),
  components: components.into(),
  wellknown: Vec::new(),
  config: wasmflow_sdk::v1::types::TypeMap::new()
}
