<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Candle Documentation</title>
    <link>https://candle.dev/docs/overview/</link>
    <description>Recent content in Overview on Candle Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://candle.dev/docs/overview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Core Concepts</title>
      <link>https://candle.dev/docs/overview/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://candle.dev/docs/overview/concepts/</guid>
      <description>Wick is designed to enable developers to &amp;ldquo;compose&amp;rdquo; applications using a configuration file and invoke components based on the needs of the application. This section covers the core concepts behind Wick&amp;rsquo;s composition model and its main benefits.
Application Composition In Wick, applications are composed by defining components and their relationships in a configuration file. This configuration-driven approach simplifies the development process by abstracting the underlying complexity and focusing on the high-level structure of the application.</description>
    </item>
    
    <item>
      <title>Streaming</title>
      <link>https://candle.dev/docs/overview/streaming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://candle.dev/docs/overview/streaming/</guid>
      <description>One of the biggest differentiators between Wick and other WebAssembly frameworks is Wick&amp;rsquo;s adoption of WasmRS and full data streaming support.
WasmRS Wick incorporates WasmRS, which implements reactive streams in WebAssembly modules. This enables asynchronous, bidirectional communication in and out of WebAssembly, expanding the capabilities of Wick. WasmRS is leading the industry and taking the possibilities with WebAssembly to new heights.
WasmRS Protocol At the core of WasmRS is a set of methods that allow the host and guest to write RSocket frames to their respective buffers in WebAssembly memory.</description>
    </item>
    
  </channel>
</rss>
