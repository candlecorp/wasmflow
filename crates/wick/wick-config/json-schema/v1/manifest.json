{
  "v1": {
    "WickConfig": {
      "oneOf": [
        { "$ref": "#/$defs/v1/AppConfiguration" },
        { "$ref": "#/$defs/v1/ComponentConfiguration" }
      ]
    },

    "AppConfiguration": {
      "$anchor": "#v1/AppConfiguration",
      "additionalProperties": false,
      "properties": {
        "format": {
          "description": "The configuration version.",

          "type": "number"
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/AppMetadata"
        },
        "name": {
          "description": "The application&#x27;s name.",

          "type": "string"
        },
        "import": {
          "description": "Components to import into the application&#x27;s scope.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "$ref": "#/$defs/v1/ComponentDefinition"
            }
          }
        },
        "resources": {
          "description": "Resources that the application can access.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "$ref": "#/$defs/v1/ResourceDefinition"
            }
          }
        },
        "triggers": {
          "description": "Configured triggers that drive the application&#x27;s behavior.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TriggerDefinition"
          }
        }
      },
      "required": ["format"]
    },

    "AppMetadata": {
      "$anchor": "#v1/AppMetadata",
      "additionalProperties": false,
      "properties": {
        "version": {
          "description": "The version of the application.",

          "type": "string"
        }
      },
      "required": []
    },

    "TriggerDefinition": {
      "oneOf": [{ "$ref": "#/$defs/v1/CliTrigger" }]
    },

    "CliTrigger": {
      "$anchor": "#v1/CliTrigger",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/cli:v1"]
        },
        "component": {
          "description": "The component to import for the handler.",
          "required": false,

          "$ref": "#/$defs/v1/ComponentDefinition"
        },
        "operation": {
          "description": "The handler on the component that accepts the CLI context.",

          "type": "string"
        },
        "app": {
          "description": "The component that provides additional logic.",
          "required": false,

          "$ref": "#/$defs/v1/ComponentDefinition"
        }
      },
      "required": []
    },

    "ResourceDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/TcpPort" },
        { "$ref": "#/$defs/v1/UdpPort" }
      ]
    },

    "TcpPort": {
      "$anchor": "#v1/TcpPort",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/tcp:v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "UdpPort": {
      "$anchor": "#v1/UdpPort",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/udp:v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "ComponentConfiguration": {
      "$anchor": "#v1/ComponentConfiguration",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "format": {
          "description": "The component manifest format version",

          "type": "number"
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/ComponentMetadata"
        },
        "host": {
          "description": "Configuration for the host when this manifest is run directly.",

          "$ref": "#/$defs/v1/HostConfig"
        },
        "labels": {
          "description": "The labels and values that apply to this manifest.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        },
        "types": {
          "description": "Additional types to export and make available to the component.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "import": {
          "description": "Components to import into the application&#x27;s scope.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "$ref": "#/$defs/v1/ComponentDefinition"
            }
          }
        },
        "operations": {
          "description": "A map of operation names to their definitions.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationDefinition"
          }
        }
      },
      "required": ["format"]
    },

    "ComponentMetadata": {
      "$anchor": "#v1/ComponentMetadata",
      "additionalProperties": false,
      "properties": {
        "version": {
          "description": "The version of the component.",

          "type": "string"
        }
      },
      "required": []
    },

    "ComponentDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/WasmComponent" },
        { "$ref": "#/$defs/v1/GrpcUrlComponent" },
        { "$ref": "#/$defs/v1/GrpcTarComponent" },
        { "$ref": "#/$defs/v1/MeshComponent" },
        { "$ref": "#/$defs/v1/ManifestComponent" }
      ]
    },

    "HostConfig": {
      "$anchor": "#v1/HostConfig",
      "additionalProperties": false,
      "properties": {
        "allow_latest": {
          "description": "Whether or not to allow the :latest tag on remote artifacts.",

          "type": "boolean"
        },
        "insecure_registries": {
          "description": "A list of registries to connect to insecurely (over HTTP vs HTTPS).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "description": "The timeout for network requests (in ms).",

          "type": "number"
        },
        "id": {
          "description": "The ID for this host, used to identify the host over the mesh.",
          "required": false,

          "type": "string"
        },
        "expose": {
          "description": "The schematics to expose via RPC or the mesh, if any.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mesh": {
          "description": "The mesh configuration.",
          "required": false,

          "$ref": "#/$defs/v1/MeshConfig"
        },
        "rpc": {
          "description": "Configuration for the GRPC server.",
          "required": false,

          "$ref": "#/$defs/v1/HttpConfig"
        }
      },
      "required": []
    },

    "HttpConfig": {
      "$anchor": "#v1/HttpConfig",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Enable/disable the server.",

          "type": "boolean"
        },
        "port": {
          "description": "The port to bind to.",
          "required": false,

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",
          "required": false,

          "type": "string"
        },
        "pem": {
          "description": "Path to pem file for TLS.",
          "required": false,

          "type": "string"
        },
        "key": {
          "description": "Path to key file for TLS.",
          "required": false,

          "type": "string"
        },
        "ca": {
          "description": "Path to CA file.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "MeshConfig": {
      "$anchor": "#v1/MeshConfig",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Enable/disable the mesh connection.",

          "type": "boolean"
        },
        "address": {
          "description": "The address of the NATS server.",

          "type": "string"
        },
        "creds_path": {
          "description": "The path to the NATS credsfile.",
          "required": false,

          "type": "string"
        },
        "token": {
          "description": "The NATS token.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "WasmComponent": {
      "$anchor": "#v1/WasmComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["Wasm"]
        },
        "reference": {
          "description": "The URL (and optional tag) or local file path to find the .wasm module.",

          "type": "string"
        },
        "permissions": {
          "description": "Permissions to give this component",

          "$ref": "#/$defs/v1/Permissions"
        },
        "config": {
          "description": "Per-component configuration.",
          "type": "object"
        }
      },
      "required": []
    },

    "Permissions": {
      "$anchor": "#v1/Permissions",
      "additionalProperties": false,
      "properties": {
        "dirs": {
          "description": "A map of from internal directory to external directory that this component should be able to access.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        }
      },
      "required": []
    },

    "GrpcUrlComponent": {
      "$anchor": "#v1/GrpcUrlComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["GrpcUrl"]
        },
        "url": {
          "description": "The GRPC URL to connect to.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component.",
          "type": "object"
        }
      },
      "required": []
    },

    "MeshComponent": {
      "$anchor": "#v1/MeshComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["Mesh"]
        },
        "id": {
          "description": "The ID of the component.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component.",
          "type": "object"
        }
      },
      "required": []
    },

    "GrpcTarComponent": {
      "$anchor": "#v1/GrpcTarComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["GrpcTar"]
        },
        "reference": {
          "description": "The URL (and optional tag) or local file path to find the archive.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component.",
          "type": "object"
        }
      },
      "required": []
    },

    "ManifestComponent": {
      "$anchor": "#v1/ManifestComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["Manifest"]
        },
        "reference": {
          "description": "The URL (and optional tag) or local file path to find the manifest.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component.",
          "type": "object"
        }
      },
      "required": []
    },

    "OperationDefinition": {
      "$anchor": "#v1/OperationDefinition",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "components": {
          "description": "A list of components the schematic can use.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "A map of IDs to specific operation.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "$ref": "#/$defs/v1/InstanceDefinition"
            }
          }
        },
        "flow": {
          "description": "A list of connections from operation to operation.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ConnectionDefinition"
          }
        }
      },
      "required": []
    },

    "Field": {
      "type": "object"
    },

    "TypeDefinition": {
      "type": "object"
    },

    "InstanceDefinition": {
      "$anchor": "#v1/InstanceDefinition",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID to assign to this instance of the operation.",

          "type": "string"
        },
        "config": {
          "description": "Data to associate with the reference.",
          "required": false,
          "type": "object"
        }
      },
      "required": ["id"]
    },

    "ConnectionDefinition": {
      "$anchor": "#v1/ConnectionDefinition",
      "additionalProperties": false,
      "properties": {
        "from": {
          "description": "The upstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        },
        "to": {
          "description": "The downstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        },
        "default": {
          "description": "The default value to provide in the event of an upstream Error or Exception.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "ConnectionTargetDefinition": {
      "$anchor": "#v1/ConnectionTargetDefinition",
      "additionalProperties": false,
      "properties": {
        "instance": {
          "description": "The instance ID of the operation.",

          "type": "string"
        },
        "port": {
          "description": "The operation port.",

          "type": "string"
        },
        "data": {
          "description": "The default value to provide on this connection in the event of an error.",
          "required": false,
          "type": "object"
        }
      },
      "required": ["instance", "port"]
    }
  }
}
