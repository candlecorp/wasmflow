{
  "v1": {
    "WickConfig": {
      "oneOf": [
        { "$ref": "#/$defs/v1/AppConfiguration" },
        { "$ref": "#/$defs/v1/ComponentConfiguration" },
        { "$ref": "#/$defs/v1/TypesConfiguration" },
        { "$ref": "#/$defs/v1/TestConfiguration" }
      ]
    },

    "LocationReference": {
      "type": "object"
    },

    "AppConfiguration": {
      "$anchor": "#v1/AppConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/app@v1"]
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/Metadata"
        },
        "name": {
          "description": "The application&#x27;s name.",

          "type": "string"
        },
        "host": {
          "description": "Configuration that controls how this application runs within a host.",

          "$ref": "#/$defs/v1/HostConfig"
        },
        "import": {
          "description": "Components to import into the application&#x27;s scope.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ComponentBinding"
          }
        },
        "resources": {
          "description": "Resources that the application can access.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ResourceBinding"
          }
        },
        "triggers": {
          "description": "Configured triggers that drive the application&#x27;s behavior.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TriggerDefinition"
          }
        }
      },
      "required": []
    },

    "Metadata": {
      "$anchor": "#v1/Metadata",
      "additionalProperties": false,
      "properties": {
        "version": {
          "description": "The version of the component or application.",

          "type": "string"
        },
        "authors": {
          "description": "The authors of the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vendors": {
          "description": "Any vendors associated with the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "A short description of the component or application.",
          "required": false,

          "type": "string"
        },
        "documentation": {
          "description": "Where to find documentation for the component or application.",
          "required": false,

          "type": "string"
        },
        "licenses": {
          "description": "The license(s) for the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "description": "The icon for the component or application.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "TriggerDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/CliTrigger" },
        { "$ref": "#/$defs/v1/HttpTrigger" },
        { "$ref": "#/$defs/v1/TimeTrigger" }
      ]
    },

    "CliTrigger": {
      "$anchor": "#v1/CliTrigger",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/cli@v1"]
        },
        "operation": {
          "description": "The operation that will act as the main entrypoint for this trigger.",

          "$ref": "#/$defs/v1/ComponentOperationExpression"
        },
        "app": {
          "description": "The component that provides additional logic.",
          "required": false,
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentDefinition"
            }
          ]
        }
      },
      "required": ["operation"]
    },

    "TimeTrigger": {
      "$anchor": "#v1/TimeTrigger",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/time@v1"]
        },
        "schedule": {
          "$ref": "#/$defs/v1/Schedule"
        },
        "operation": {
          "description": "The operation that will act as the main entrypoint for this trigger.",

          "$ref": "#/$defs/v1/ComponentOperationExpression"
        },
        "payload": {
          "description": "Values passed to the operation as inputs",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationInput"
          }
        }
      },
      "required": ["schedule", "operation", "payload"]
    },

    "OperationInput": {
      "$anchor": "#v1/OperationInput",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the operation parameter.",

          "type": "string"
        },
        "value": {
          "description": "The value to pass to the operation parameter."
        }
      },
      "required": ["name", "value"]
    },

    "Schedule": {
      "$anchor": "#v1/Schedule",
      "additionalProperties": false,
      "properties": {
        "cron": {
          "description": "schedule in cron format with second precision",

          "type": "string"
        },
        "repeat": {
          "description": "repeat n times, 0 means forever",

          "type": "number"
        }
      },
      "required": ["cron"]
    },

    "ComponentOperationExpression": {
      "$anchor": "#v1/ComponentOperationExpression",
      "additionalProperties": false,
      "properties": {
        "component": {
          "description": "The component that exports the operation.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentDefinition"
            }
          ]
        },
        "name": {
          "description": "The operation to call.",

          "type": "string"
        }
      },
      "required": ["component", "name"]
    },

    "HttpTrigger": {
      "$anchor": "#v1/HttpTrigger",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/http@v1"]
        },
        "resource": {
          "description": "The TcpPort reference to listen on for connections.",

          "type": "string"
        },
        "routers": {
          "description": "The HttpRouters that should handle incoming requests",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/HttpRouter"
          }
        }
      },
      "required": []
    },

    "HttpRouter": {
      "oneOf": [
        { "$ref": "#/$defs/v1/RawRouter" },
        { "$ref": "#/$defs/v1/RestRouter" }
      ]
    },

    "RestRouter": {
      "$anchor": "#v1/RestRouter",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/rest@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "component": {
          "description": "The component to expose as a Rest API.",

          "$ref": "#/$defs/v1/ComponentDefinition"
        }
      },
      "required": ["path", "component"]
    },

    "RawRouter": {
      "$anchor": "#v1/RawRouter",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/raw@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "operation": {
          "description": "The operation that handles HTTP requests.",

          "$ref": "#/$defs/v1/ComponentOperationExpression"
        }
      },
      "required": ["path", "operation"]
    },

    "ResourceDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/TcpPort" },
        { "$ref": "#/$defs/v1/UdpPort" }
      ]
    },

    "TcpPort": {
      "$anchor": "#v1/TcpPort",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/tcpport@v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "UdpPort": {
      "$anchor": "#v1/UdpPort",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/udpport@v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "TypesConfiguration": {
      "$anchor": "#v1/TypesConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/types@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "types": {
          "description": "Additional types to export and make available to the component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        }
      },
      "required": []
    },

    "TestConfiguration": {
      "$anchor": "#v1/TestConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/tests@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "tests": {
          "description": "Unit tests to run against components and operations.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TestDefinition"
          }
        }
      },
      "required": []
    },

    "ComponentConfiguration": {
      "$anchor": "#v1/ComponentConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/Metadata"
        },
        "host": {
          "description": "Configuration for when wick hosts this component as a service.",

          "$ref": "#/$defs/v1/HostConfig"
        },
        "labels": {
          "description": "The labels and values that apply to this manifest.",

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        },
        "component": {
          "description": "Configuration specific to different kinds of components.",

          "$ref": "#/$defs/v1/ComponentKind"
        },
        "tests": {
          "description": "Assertions that can be run against the component to validate its behavior.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TestDefinition"
          }
        }
      },
      "required": ["component"]
    },

    "ComponentKind": {
      "oneOf": [
        { "$ref": "#/$defs/v1/WasmComponentConfiguration" },
        { "$ref": "#/$defs/v1/CompositeComponentConfiguration" }
      ]
    },

    "CompositeComponentConfiguration": {
      "$anchor": "#v1/CompositeComponentConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/composite@v1"]
        },
        "types": {
          "description": "Additional types to export and make available to the component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "import": {
          "description": "Components to import into the application&#x27;s scope.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ComponentBinding"
          }
        },
        "operations": {
          "description": "A list of operations implemented by the Composite component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/CompositeOperationDefinition"
          }
        }
      },
      "required": []
    },

    "WasmComponentConfiguration": {
      "$anchor": "#v1/WasmComponentConfiguration",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/wasmrs@v1"]
        },
        "ref": {
          "description": "A reference to a local WebAssembly implementation",

          "type": "string"
        },
        "types": {
          "description": "Additional types to export and make available to the component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "operations": {
          "description": "A list of operations implemented by the WebAssembly module.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationDefinition"
          }
        }
      },
      "required": ["ref"]
    },

    "ResourceBinding": {
      "$anchor": "#v1/ResourceBinding",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "resource": {
          "description": "The resource to bind to.",

          "$ref": "#/$defs/v1/ResourceDefinition"
        }
      },
      "required": ["name", "resource"]
    },

    "ComponentBinding": {
      "$anchor": "#v1/ComponentBinding",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "component": {
          "description": "The component to bind to.",

          "$ref": "#/$defs/v1/ComponentDefinition"
        }
      },
      "required": ["name", "component"]
    },

    "ComponentDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/GrpcUrlComponent" },
        { "$ref": "#/$defs/v1/ManifestComponent" },
        { "$ref": "#/$defs/v1/ComponentReference" },
        { "$ref": "#/$defs/v1/PostgresComponent" }
      ]
    },

    "ComponentReference": {
      "$anchor": "#v1/ComponentReference",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/reference@v1"]
        },
        "id": {
          "description": "The id of the component to reference.",

          "type": "string"
        }
      },
      "required": ["id"]
    },

    "HostConfig": {
      "$anchor": "#v1/HostConfig",
      "additionalProperties": false,
      "properties": {
        "allow_latest": {
          "description": "Whether or not to allow the :latest tag on remote artifacts.",

          "type": "boolean"
        },
        "insecure_registries": {
          "description": "A list of registries to connect to insecurely (over HTTP vs HTTPS).",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "description": "The timeout for network requests (in ms).",

          "type": "number"
        },
        "rpc": {
          "description": "Configuration for the GRPC server.",
          "required": false,

          "$ref": "#/$defs/v1/HttpConfig"
        }
      },
      "required": []
    },

    "HttpConfig": {
      "$anchor": "#v1/HttpConfig",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Enable/disable the server.",

          "type": "boolean"
        },
        "port": {
          "description": "The port to bind to.",
          "required": false,

          "type": "number"
        },
        "address": {
          "description": "The address to bind to.",
          "required": false,

          "type": "string"
        },
        "pem": {
          "description": "Path to pem file for TLS.",
          "required": false,

          "type": "string"
        },
        "key": {
          "description": "Path to key file for TLS.",
          "required": false,

          "type": "string"
        },
        "ca": {
          "description": "Path to CA file.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "Permissions": {
      "$anchor": "#v1/Permissions",
      "additionalProperties": false,
      "properties": {
        "dirs": {
          "description": "A map of from internal directory to external directory that this component should be able to access.",

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        }
      },
      "required": []
    },

    "GrpcUrlComponent": {
      "$anchor": "#v1/GrpcUrlComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/grpc@v1"]
        },
        "url": {
          "description": "The GRPC URL to connect to.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component."
        }
      },
      "required": ["url"]
    },

    "ManifestComponent": {
      "$anchor": "#v1/ManifestComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/manifest@v1"]
        },
        "ref": {
          "description": "The URL (and optional tag) or local file path to find the manifest.",

          "type": "string"
        },
        "config": {
          "description": "Any configuration necessary for the component."
        }
      },
      "required": ["ref"]
    },

    "CompositeOperationDefinition": {
      "$anchor": "#v1/CompositeOperationDefinition",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "components": {
          "description": "A list of components the schematic can use.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "A map of IDs to specific operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/InstanceBinding"
          }
        },
        "flow": {
          "description": "A list of connections from operation to operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ConnectionDefinition"
          }
        }
      },
      "required": []
    },

    "OperationDefinition": {
      "$anchor": "#v1/OperationDefinition",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        }
      },
      "required": []
    },

    "Field": {
      "type": "object"
    },

    "TypeDefinition": {
      "type": "object"
    },

    "InstanceBinding": {
      "$anchor": "#v1/InstanceBinding",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "operation": {
          "description": "The operation to bind to.",

          "$ref": "#/$defs/v1/ComponentOperationExpression"
        },
        "config": {
          "description": "Data to associate with the reference, if any.",
          "required": false
        }
      },
      "required": ["name", "operation"]
    },

    "ConnectionDefinition": {
      "$anchor": "#v1/ConnectionDefinition",
      "additionalProperties": false,
      "properties": {
        "from": {
          "description": "The upstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        },
        "to": {
          "description": "The downstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        }
      },
      "required": ["from", "to"]
    },

    "ConnectionTargetDefinition": {
      "$anchor": "#v1/ConnectionTargetDefinition",
      "additionalProperties": false,
      "properties": {
        "instance": {
          "description": "The instance ID of the operation.",

          "type": "string"
        },
        "port": {
          "description": "The operation port.",

          "type": "string"
        },
        "data": {
          "description": "The default value to provide on this connection in the event of an error.",
          "required": false
        }
      },
      "required": ["instance", "port"]
    },

    "TestDefinition": {
      "$anchor": "#v1/TestDefinition",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the test.",

          "type": "string"
        },
        "operation": {
          "description": "The operaton to test.",

          "type": "string"
        },
        "inherent": {
          "description": "Inherent data to use for the test.",
          "required": false,

          "$ref": "#/$defs/v1/InherentData"
        },
        "input": {
          "description": "The inputs to the test.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/PacketData"
          }
        },
        "output": {
          "description": "The expected outputs of the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/PacketData"
          }
        }
      },
      "required": ["name", "operation"]
    },

    "InherentData": {
      "$anchor": "#v1/InherentData",
      "additionalProperties": false,
      "properties": {
        "seed": {
          "description": "An RNG seed.",
          "required": false,

          "type": "number"
        },
        "timestamp": {
          "description": "A timestamp.",
          "required": false,

          "type": "number"
        }
      },
      "required": []
    },

    "PacketData": {
      "oneOf": [
        { "$ref": "#/$defs/v1/PayloadData" },
        { "$ref": "#/$defs/v1/ErrorData" }
      ]
    },

    "PayloadData": {
      "$anchor": "#v1/PayloadData",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the port to send the data to.",

          "type": "string"
        },
        "flags": {
          "description": "Any flags set on the packet.",
          "required": false,

          "$ref": "#/$defs/v1/PacketFlags"
        },
        "data": {
          "description": "The data to send.",
          "required": false
        }
      },
      "required": ["name"]
    },

    "ErrorData": {
      "$anchor": "#v1/ErrorData",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the port to send the data to.",

          "type": "string"
        },
        "flags": {
          "description": "Any flags set on the packet.",
          "required": false,

          "$ref": "#/$defs/v1/PacketFlags"
        },
        "message": {
          "description": "The error message.",

          "type": "string"
        }
      },
      "required": ["name", "message"]
    },

    "PacketFlags": {
      "$anchor": "#v1/PacketFlags",
      "additionalProperties": false,
      "properties": {
        "done": {
          "description": "When set, indicates the port should be considered closed.",

          "type": "boolean"
        },
        "open": {
          "description": "When set, indicates the opening of a new substream context within the parent stream.",

          "type": "boolean"
        },
        "close": {
          "description": "When set, indicates the closing of a substream context within the parent stream.",

          "type": "boolean"
        }
      },
      "required": []
    },

    "PostgresComponent": {
      "$anchor": "#v1/PostgresComponent",
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/postgres@v1"]
        },
        "resource": {
          "description": "The TcpPort reference to listen on for connections.",

          "type": "string"
        },
        "user": {
          "description": "The username to use when connecting to the postgres database.",

          "type": "string"
        },
        "password": {
          "description": "The password to use when connecting to the postgres database.",

          "type": "string"
        },
        "database": {
          "description": "The database to connect to.",

          "type": "string"
        },
        "tls": {
          "description": "Whether or not to use TLS.",

          "type": "boolean"
        },
        "operations": {
          "description": "A list of operations to expose on this component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/PostgresOperationDefinition"
          }
        }
      },
      "required": []
    },

    "PostgresOperationDefinition": {
      "$anchor": "#v1/PostgresOperationDefinition",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "query": {
          "description": "The query to execute.",

          "type": "string"
        },
        "arguments": {
          "description": "The arguments to the query, defined as a list of input names.",

          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": []
    }
  }
}
