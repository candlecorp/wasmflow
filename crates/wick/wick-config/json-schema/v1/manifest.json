{
  "v1": {
    "WickConfig": {
      "oneOf": [
        { "$ref": "#/$defs/v1/AppConfiguration" },
        { "$ref": "#/$defs/v1/ComponentConfiguration" },
        { "$ref": "#/$defs/v1/TypesConfiguration" },
        { "$ref": "#/$defs/v1/TestConfiguration" }
      ]
    },

    "LocationReference": {
      "type": "string"
    },

    "LiquidJsonValue": {
      "type": "string"
    },

    "Glob": {
      "type": "string"
    },

    "AppConfiguration": {
      "$anchor": "#v1/AppConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/app@v1"]
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/Metadata"
        },
        "name": {
          "description": "The application&#x27;s name.",

          "type": "string"
        },
        "host": {
          "description": "Configuration that controls how this application runs within a host.",
          "required": false,

          "$ref": "#/$defs/v1/HostConfig"
        },
        "import": {
          "description": "Components to import into the application&#x27;s scope.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ImportBinding"
          }
        },
        "resources": {
          "description": "Resources that the application can access.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ResourceBinding"
          }
        },
        "triggers": {
          "description": "Configured triggers that drive the application&#x27;s behavior.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TriggerDefinition"
          }
        },
        "package": {
          "description": "Details about the package for this application.",
          "required": false,

          "$ref": "#/$defs/v1/PackageDefinition"
        }
      },
      "required": []
    },

    "PackageDefinition": {
      "$anchor": "#v1/PackageDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "files": {
          "description": "The list of files and folders to be included with the package.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registry": {
          "description": "Configuration for publishing the package to a registry. This will be used if the package is published without any additional arguments on the command line. If a tag is specified on the command line, that tag will be used instead. ",
          "required": false,

          "$ref": "#/$defs/v1/RegistryDefinition"
        }
      },
      "required": []
    },

    "RegistryDefinition": {
      "$anchor": "#v1/RegistryDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "registry": {
          "description": "The registry to publish to.",

          "type": "string"
        },
        "namespace": {
          "description": "The namespace on the registry. ex: registry.candle.dev/&lt;namespace&gt;/&lt;myWickApp&gt;",

          "type": "string"
        }
      },
      "required": []
    },

    "Metadata": {
      "$anchor": "#v1/Metadata",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the component or application.",

          "type": "string"
        },
        "authors": {
          "description": "The authors of the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vendors": {
          "description": "Any vendors associated with the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "A short description of the component or application.",
          "required": false,

          "type": "string"
        },
        "documentation": {
          "description": "Where to find documentation for the component or application.",
          "required": false,

          "type": "string"
        },
        "licenses": {
          "description": "The license(s) for the component or application.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "description": "The icon for the component or application.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "TriggerDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/CliTrigger" },
        { "$ref": "#/$defs/v1/HttpTrigger" },
        { "$ref": "#/$defs/v1/TimeTrigger" }
      ]
    },

    "CliTrigger": {
      "$anchor": "#v1/CliTrigger",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/cli@v1"]
        },
        "operation": {
          "description": "The operation that will act as the main entrypoint for this trigger.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentOperationExpression"
            }
          ]
        }
      },
      "required": ["operation"]
    },

    "TimeTrigger": {
      "$anchor": "#v1/TimeTrigger",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/time@v1"]
        },
        "schedule": {
          "$ref": "#/$defs/v1/Schedule"
        },
        "operation": {
          "description": "The operation that will act as the main entrypoint for this trigger.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentOperationExpression"
            }
          ]
        },
        "payload": {
          "description": "Values passed to the operation as inputs",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationInput"
          }
        }
      },
      "required": ["schedule", "operation", "payload"]
    },

    "OperationInput": {
      "$anchor": "#v1/OperationInput",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation parameter.",

          "type": "string"
        },
        "value": {
          "description": "The value to pass to the operation parameter."
        }
      },
      "required": ["name", "value"]
    },

    "Schedule": {
      "$anchor": "#v1/Schedule",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "cron": {
          "description": "schedule in cron format with second precision",

          "type": "string"
        },
        "repeat": {
          "description": "repeat n times, 0 means forever",

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        }
      },
      "required": ["cron"]
    },

    "ComponentOperationExpression": {
      "$anchor": "#v1/ComponentOperationExpression",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "component": {
          "description": "The component that exports the operation.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentDefinition"
            }
          ]
        },
        "name": {
          "description": "The operation to call.",

          "type": "string"
        }
      },
      "required": ["component", "name"]
    },

    "HttpTrigger": {
      "$anchor": "#v1/HttpTrigger",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/trigger/http@v1"]
        },
        "resource": {
          "description": "The TcpPort reference to listen on for connections.",

          "type": "string"
        },
        "routers": {
          "description": "The HttpRouters that should handle incoming requests",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/HttpRouter"
          }
        }
      },
      "required": []
    },

    "HttpRouter": {
      "oneOf": [
        { "$ref": "#/$defs/v1/RawRouter" },
        { "$ref": "#/$defs/v1/RestRouter" },
        { "$ref": "#/$defs/v1/StaticRouter" },
        { "$ref": "#/$defs/v1/ProxyRouter" }
      ]
    },

    "ProxyRouter": {
      "$anchor": "#v1/ProxyRouter",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/proxy@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "url": {
          "description": "The URL resource to proxy to.",

          "type": "string"
        },
        "strip_path": {
          "description": "Whether or not to strip the router&#x27;s path from the proxied request.",

          "type": "boolean"
        }
      },
      "required": ["path", "url"]
    },

    "RestRouter": {
      "$anchor": "#v1/RestRouter",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/rest@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "tools": {
          "description": "Additional tools and services to enable.",
          "required": false,

          "$ref": "#/$defs/v1/Tools"
        },
        "routes": {
          "description": "The routes to serve and operations that handle them.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Route"
          }
        },
        "info": {
          "description": "Information about the router to use when generating documentation and other tools.",
          "required": false,

          "$ref": "#/$defs/v1/Info"
        }
      },
      "required": ["path"]
    },

    "Tools": {
      "$anchor": "#v1/Tools",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "openapi": {
          "description": "The path to serve the OpenAPI spec from",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "Info": {
      "$anchor": "#v1/Info",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the API.",
          "required": false,

          "type": "string"
        },
        "description": {
          "description": "A short description of the API.",
          "required": false,

          "type": "string"
        },
        "tos": {
          "description": "The terms of service for the API.",
          "required": false,

          "type": "string"
        },
        "contact": {
          "description": "The contact information for the API.",
          "required": false,

          "$ref": "#/$defs/v1/Contact"
        },
        "license": {
          "description": "The license information for the API.",
          "required": false,

          "$ref": "#/$defs/v1/License"
        },
        "version": {
          "description": "The version of the API.",
          "required": false,

          "type": "string"
        },
        "documentation": {
          "description": "The URL to the API&#x27;s terms of service.",
          "required": false,

          "$ref": "#/$defs/v1/Documentation"
        }
      },
      "required": []
    },

    "Documentation": {
      "$anchor": "#v1/Documentation",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL to the API&#x27;s documentation.",
          "required": false,

          "type": "string"
        },
        "description": {
          "description": "A short description of the documentation.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "License": {
      "$anchor": "#v1/License",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the license.",
          "required": false,

          "type": "string"
        },
        "url": {
          "description": "The URL to the license.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "Contact": {
      "$anchor": "#v1/Contact",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the contact.",
          "required": false,

          "type": "string"
        },
        "url": {
          "description": "The URL to the contact.",
          "required": false,

          "type": "string"
        },
        "email": {
          "description": "The email address of the contact.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "Route": {
      "$anchor": "#v1/Route",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the route, used for documentation and tooling.",
          "required": false,

          "type": "string"
        },
        "methods": {
          "description": "The HTTP methods to serve this route for.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "The path to serve this route from.",

          "type": "string"
        },
        "handler": {
          "description": "The operation that will act as the main entrypoint for this route.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentOperationExpression"
            }
          ]
        },
        "description": {
          "description": "A short description of the route.",
          "required": false,

          "type": "string"
        },
        "summary": {
          "description": "A longer description of the route.",
          "required": false,

          "type": "string"
        }
      },
      "required": ["handler"]
    },

    "StaticRouter": {
      "$anchor": "#v1/StaticRouter",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/static@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "volume": {
          "description": "The volume to serve static files from.",

          "type": "string"
        }
      },
      "required": ["path", "volume"]
    },

    "RawRouter": {
      "$anchor": "#v1/RawRouter",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/router/raw@v1"]
        },
        "path": {
          "description": "The path to start serving this router from.",

          "type": "string"
        },
        "codec": {
          "description": "The codec to use when encoding/decoding data.",
          "required": false,

          "$ref": "#/$defs/v1/Codec"
        },
        "operation": {
          "description": "The operation that handles HTTP requests.",

          "$ref": "#/$defs/v1/ComponentOperationExpression"
        }
      },
      "required": ["path", "operation"]
    },

    "ResourceDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/TcpPort" },
        { "$ref": "#/$defs/v1/UdpPort" },
        { "$ref": "#/$defs/v1/Url" },
        { "$ref": "#/$defs/v1/Volume" }
      ]
    },

    "TcpPort": {
      "$anchor": "#v1/TcpPort",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/tcpport@v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "Volume": {
      "$anchor": "#v1/Volume",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/volume@v1"]
        },
        "path": {
          "description": "The path.",

          "type": "string"
        }
      },
      "required": ["path"]
    },

    "UdpPort": {
      "$anchor": "#v1/UdpPort",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/udpport@v1"]
        },
        "port": {
          "description": "The port to bind to.",

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "address": {
          "description": "The address to bind to.",

          "type": "string"
        }
      },
      "required": []
    },

    "Url": {
      "$anchor": "#v1/Url",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/resource/url@v1"]
        },
        "url": {
          "description": "The url string.",

          "type": "string"
        }
      },
      "required": ["url"]
    },

    "TypesConfiguration": {
      "$anchor": "#v1/TypesConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/types@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "types": {
          "description": "Additional types to export and make available to the component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "operations": {
          "description": "A list of operation signatures.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationDefinition"
          }
        }
      },
      "required": []
    },

    "TestConfiguration": {
      "$anchor": "#v1/TestConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/tests@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "tests": {
          "description": "Unit tests to run against components and operations.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TestDefinition"
          }
        }
      },
      "required": []
    },

    "ComponentConfiguration": {
      "$anchor": "#v1/ComponentConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component@v1"]
        },
        "name": {
          "description": "The name of this component.",
          "required": false,

          "type": "string"
        },
        "metadata": {
          "description": "Associated metadata for this component.",
          "required": false,

          "$ref": "#/$defs/v1/Metadata"
        },
        "host": {
          "description": "Configuration for when wick hosts this component as a service.",
          "required": false,

          "$ref": "#/$defs/v1/HostConfig"
        },
        "resources": {
          "description": "Resources that the application can access.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ResourceBinding"
          }
        },
        "import": {
          "description": "Components or types to import into the application&#x27;s scope.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/ImportBinding"
          }
        },
        "types": {
          "description": "Additional types to export and make available to the component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "requires": {
          "description": "Interfaces the component requires to operate.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/BoundInterface"
          }
        },
        "labels": {
          "description": "The labels and values that apply to this manifest.",

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        },
        "component": {
          "description": "Configuration specific to different kinds of components.",

          "$ref": "#/$defs/v1/ComponentKind"
        },
        "tests": {
          "description": "Assertions that can be run against the component to validate its behavior.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TestDefinition"
          }
        },
        "package": {
          "description": "Details about the package for this component.",
          "required": false,

          "$ref": "#/$defs/v1/PackageDefinition"
        }
      },
      "required": ["component"]
    },

    "BoundInterface": {
      "$anchor": "#v1/BoundInterface",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the interface.",

          "type": "string"
        },
        "interface": {
          "description": "The interface to bind to.",

          "$ref": "#/$defs/v1/InterfaceDefinition"
        }
      },
      "required": ["name", "interface"]
    },

    "InterfaceDefinition": {
      "$anchor": "#v1/InterfaceDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "types": {
          "description": "Types used by the interface&#x27;s operations",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/TypeDefinition"
          }
        },
        "operations": {
          "description": "A list of operations defined by this interface.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationDefinition"
          }
        }
      },
      "required": []
    },

    "CompositeComponentConfiguration": {
      "$anchor": "#v1/CompositeComponentConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/composite@v1"]
        },
        "operations": {
          "description": "A list of operations implemented by the Composite component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/CompositeOperationDefinition"
          }
        }
      },
      "required": []
    },

    "WasmComponentConfiguration": {
      "$anchor": "#v1/WasmComponentConfiguration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/wasmrs@v1"]
        },
        "ref": {
          "description": "A reference to a local WebAssembly implementation",

          "type": "string"
        },
        "operations": {
          "description": "A list of operations implemented by the WebAssembly module.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/OperationDefinition"
          }
        }
      },
      "required": ["ref"]
    },

    "ResourceBinding": {
      "$anchor": "#v1/ResourceBinding",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "resource": {
          "description": "The resource to bind to.",

          "$ref": "#/$defs/v1/ResourceDefinition"
        }
      },
      "required": ["name", "resource"]
    },

    "ImportBinding": {
      "$anchor": "#v1/ImportBinding",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "component": {
          "description": "The import to bind to.",

          "$ref": "#/$defs/v1/ImportDefinition"
        }
      },
      "required": ["name", "component"]
    },

    "ComponentKind": {
      "oneOf": [
        { "$ref": "#/$defs/v1/WasmComponentConfiguration" },
        { "$ref": "#/$defs/v1/CompositeComponentConfiguration" },
        { "$ref": "#/$defs/v1/SqlComponent" },
        { "$ref": "#/$defs/v1/HttpClientComponent" }
      ]
    },

    "ImportDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/TypesComponent" },
        { "$ref": "#/$defs/v1/ManifestComponent" },
        { "$ref": "#/$defs/v1/SqlComponent" },
        { "$ref": "#/$defs/v1/HttpClientComponent" }
      ]
    },

    "ComponentDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/GrpcUrlComponent" },
        { "$ref": "#/$defs/v1/ManifestComponent" },
        { "$ref": "#/$defs/v1/ComponentReference" },
        { "$ref": "#/$defs/v1/SqlComponent" },
        { "$ref": "#/$defs/v1/HttpClientComponent" }
      ]
    },

    "TypesComponent": {
      "$anchor": "#v1/TypesComponent",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/types@v1"]
        },
        "ref": {
          "description": "The URL (and optional tag) or local file path to find the types manifest.",

          "type": "string"
        },
        "types": {
          "description": "The types to import from the manifest.",

          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["ref"]
    },

    "ComponentReference": {
      "$anchor": "#v1/ComponentReference",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/reference@v1"]
        },
        "id": {
          "description": "The id of the component to reference.",

          "type": "string"
        }
      },
      "required": ["id"]
    },

    "HostConfig": {
      "$anchor": "#v1/HostConfig",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "allow_latest": {
          "description": "Whether or not to allow the :latest tag on remote artifacts.",

          "type": "boolean"
        },
        "insecure_registries": {
          "description": "A list of registries to connect to insecurely (over HTTP vs HTTPS).",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "description": "The timeout for network requests (in ms).",

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "rpc": {
          "description": "Configuration for the GRPC server.",
          "required": false,

          "$ref": "#/$defs/v1/HttpConfig"
        }
      },
      "required": []
    },

    "HttpConfig": {
      "$anchor": "#v1/HttpConfig",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable/disable the server.",

          "type": "boolean"
        },
        "port": {
          "description": "The port to bind to.",
          "required": false,

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "address": {
          "description": "The address to bind to.",
          "required": false,

          "type": "string"
        },
        "pem": {
          "description": "Path to pem file for TLS.",
          "required": false,

          "type": "string"
        },
        "key": {
          "description": "Path to key file for TLS.",
          "required": false,

          "type": "string"
        },
        "ca": {
          "description": "Path to CA file.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "GrpcUrlComponent": {
      "$anchor": "#v1/GrpcUrlComponent",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/grpc@v1"]
        },
        "url": {
          "description": "The GRPC URL to connect to.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration necessary for the component.",
          "required": false,

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {}
          }
        }
      },
      "required": ["url"]
    },

    "ManifestComponent": {
      "$anchor": "#v1/ManifestComponent",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/manifest@v1"]
        },
        "ref": {
          "description": "The URL (and optional tag) or local file path to find the manifest.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration necessary for the component.",
          "required": false,

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {}
          }
        },
        "provide": {
          "description": "External components to provide to the referenced component.",

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "string"
            }
          }
        }
      },
      "required": ["ref"]
    },

    "CompositeOperationDefinition": {
      "$anchor": "#v1/CompositeOperationDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration required by the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "components": {
          "description": "A list of components the schematic can use.",

          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uses": {
          "description": "A map of IDs to specific operations.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/InstanceBinding"
          }
        },
        "flow": {
          "description": "A list of connections from operation to operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/FlowExpression"
          }
        },
        "operations": {
          "description": "Additional flow operations scoped to this operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/CompositeOperationDefinition"
          }
        }
      },
      "required": []
    },

    "FlowExpression": {
      "oneOf": [
        { "type": "string" },
        { "$ref": "#/$defs/v1/ConnectionDefinition" },
        { "$ref": "#/$defs/v1/BlockExpression" }
      ]
    },

    "BlockExpression": {
      "$anchor": "#v1/BlockExpression",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "expressions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/FlowExpression"
          }
        }
      },
      "required": ["expressions"]
    },

    "ConnectionDefinition": {
      "$anchor": "#v1/ConnectionDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "from": {
          "description": "The upstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        },
        "to": {
          "description": "The downstream operation port.",

          "$ref": "#/$defs/v1/ConnectionTargetDefinition"
        }
      },
      "required": ["from", "to"]
    },

    "ConnectionTargetDefinition": {
      "$anchor": "#v1/ConnectionTargetDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "instance": {
          "description": "The instance ID of the operation.",

          "type": "string"
        },
        "port": {
          "description": "The operation port.",

          "type": "string"
        },
        "data": {
          "description": "The default value to provide on this connection in the event of an error.",
          "required": false,

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {}
          }
        }
      },
      "required": ["instance", "port"]
    },

    "OperationDefinition": {
      "$anchor": "#v1/OperationDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration required by the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        }
      },
      "required": []
    },

    "Field": {
      "$anchor": "#v1/Field",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the field.",

          "type": "string"
        },
        "type": {
          "description": "The type signature of the field.",

          "$ref": "#/$defs/v1/TypeSignature"
        },
        "description": {
          "description": "The description of the field.",
          "required": false,

          "type": "string"
        }
      },
      "required": ["name", "type"]
    },

    "TypeSignature": {
      "oneOf": [{ "type": "string" }]
    },

    "I8": {
      "$anchor": "#v1/I8",
      "additionalProperties": false,
      "type": "string",
      "enum": ["i8"]
    },

    "I16": {
      "$anchor": "#v1/I16",
      "additionalProperties": false,
      "type": "string",
      "enum": ["i16"]
    },

    "I32": {
      "$anchor": "#v1/I32",
      "additionalProperties": false,
      "type": "string",
      "enum": ["i32"]
    },

    "I64": {
      "$anchor": "#v1/I64",
      "additionalProperties": false,
      "type": "string",
      "enum": ["i64"]
    },

    "U8": {
      "$anchor": "#v1/U8",
      "additionalProperties": false,
      "type": "string",
      "enum": ["u8"]
    },

    "U16": {
      "$anchor": "#v1/U16",
      "additionalProperties": false,
      "type": "string",
      "enum": ["u16"]
    },

    "U32": {
      "$anchor": "#v1/U32",
      "additionalProperties": false,
      "type": "string",
      "enum": ["u32"]
    },

    "U64": {
      "$anchor": "#v1/U64",
      "additionalProperties": false,
      "type": "string",
      "enum": ["u64"]
    },

    "F32": {
      "$anchor": "#v1/F32",
      "additionalProperties": false,
      "type": "string",
      "enum": ["f32"]
    },

    "F64": {
      "$anchor": "#v1/F64",
      "additionalProperties": false,
      "type": "string",
      "enum": ["f64"]
    },

    "Bool": {
      "$anchor": "#v1/Bool",
      "additionalProperties": false,
      "type": "string",
      "enum": ["i8"]
    },

    "StringType": {
      "$anchor": "#v1/StringType",
      "additionalProperties": false,
      "type": "string",
      "enum": ["string"]
    },

    "Datetime": {
      "$anchor": "#v1/Datetime",
      "additionalProperties": false,
      "type": "string",
      "enum": ["datetime"]
    },

    "Bytes": {
      "$anchor": "#v1/Bytes",
      "additionalProperties": false,
      "type": "string",
      "enum": ["bytes"]
    },

    "Custom": {
      "$anchor": "#v1/Custom",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the custom type.",

          "type": "string"
        }
      },
      "required": []
    },

    "Optional": {
      "$anchor": "#v1/Optional",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/$defs/v1/TypeSignature"
        }
      },
      "required": ["type"]
    },

    "List": {
      "$anchor": "#v1/List",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/$defs/v1/TypeSignature"
        }
      },
      "required": ["type"]
    },

    "Map": {
      "$anchor": "#v1/Map",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/$defs/v1/TypeSignature"
        },
        "value": {
          "$ref": "#/$defs/v1/TypeSignature"
        }
      },
      "required": ["key", "value"]
    },

    "Object": {
      "$anchor": "#v1/Object",
      "additionalProperties": false,
      "type": "string",
      "enum": ["object"]
    },

    "TypeDefinition": {
      "oneOf": [
        { "$ref": "#/$defs/v1/StructSignature" },
        { "$ref": "#/$defs/v1/EnumSignature" }
      ]
    },

    "StructSignature": {
      "$anchor": "#v1/StructSignature",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/type/struct@v1"]
        },
        "name": {
          "description": "The name of the struct.",

          "type": "string"
        },
        "fields": {
          "description": "The fields in this struct.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "description": {
          "description": "The description of the struct.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "EnumSignature": {
      "$anchor": "#v1/EnumSignature",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/type/enum@v1"]
        },
        "name": {
          "description": "The name of the enum.",

          "type": "string"
        },
        "variants": {
          "description": "The variants in the enum.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/EnumVariant"
          }
        },
        "description": {
          "description": "The description of the enum.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "EnumVariant": {
      "$anchor": "#v1/EnumVariant",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the variant.",

          "type": "string"
        },
        "index": {
          "description": "The index of the variant.",
          "required": false,

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "value": {
          "description": "The optional value of the variant.",
          "required": false,

          "type": "string"
        },
        "description": {
          "description": "The description of the variant.",
          "required": false,

          "type": "string"
        }
      },
      "required": []
    },

    "InstanceBinding": {
      "$anchor": "#v1/InstanceBinding",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the binding.",

          "type": "string"
        },
        "operation": {
          "description": "The operation to bind to.",
          "oneOf": [
            { "type": "string" },
            {
              "$ref": "#/$defs/v1/ComponentOperationExpression"
            }
          ]
        },
        "with": {
          "description": "Data to associate with the reference, if any.",
          "required": false,

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {}
          }
        }
      },
      "required": ["name", "operation"]
    },

    "TestDefinition": {
      "$anchor": "#v1/TestDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the test.",

          "type": "string"
        },
        "operation": {
          "description": "The operaton to test.",

          "type": "string"
        },
        "inherent": {
          "description": "Inherent data to use for the test.",
          "required": false,

          "$ref": "#/$defs/v1/InherentData"
        },
        "with": {
          "description": "The configuration for the operation, if any.",
          "required": false,

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {}
          }
        },
        "input": {
          "description": "The inputs to the test.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/PacketData"
          }
        },
        "output": {
          "description": "The expected outputs of the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/PacketData"
          }
        }
      },
      "required": ["name", "operation"]
    },

    "InherentData": {
      "$anchor": "#v1/InherentData",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "seed": {
          "description": "An RNG seed.",
          "required": false,

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        },
        "timestamp": {
          "description": "A timestamp.",
          "required": false,

          "oneOf": [{ "type": "number" }, { "type": "string" }]
        }
      },
      "required": []
    },

    "PacketData": {
      "oneOf": [
        { "$ref": "#/$defs/v1/PayloadData" },
        { "$ref": "#/$defs/v1/ErrorData" }
      ]
    },

    "PayloadData": {
      "$anchor": "#v1/PayloadData",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the port to send the data to.",

          "type": "string"
        },
        "flags": {
          "description": "Any flags set on the packet.",
          "required": false,

          "$ref": "#/$defs/v1/PacketFlags"
        },
        "data": {
          "description": "The data to send.",
          "required": false
        }
      },
      "required": ["name"]
    },

    "ErrorData": {
      "$anchor": "#v1/ErrorData",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the port to send the data to.",

          "type": "string"
        },
        "flags": {
          "description": "Any flags set on the packet.",
          "required": false,

          "$ref": "#/$defs/v1/PacketFlags"
        },
        "error": {
          "description": "The error message.",

          "type": "string"
        }
      },
      "required": ["name", "error"]
    },

    "PacketFlags": {
      "$anchor": "#v1/PacketFlags",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "done": {
          "description": "When set, indicates the port should be considered closed.",

          "type": "boolean"
        },
        "open": {
          "description": "When set, indicates the opening of a new substream context within the parent stream.",

          "type": "boolean"
        },
        "close": {
          "description": "When set, indicates the closing of a substream context within the parent stream.",

          "type": "boolean"
        }
      },
      "required": []
    },

    "SqlComponent": {
      "$anchor": "#v1/SqlComponent",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/sql@v1"]
        },
        "resource": {
          "description": "The connect string URL resource for the database.",

          "type": "string"
        },
        "tls": {
          "description": "Whether or not to use TLS.",

          "type": "boolean"
        },
        "operations": {
          "description": "A list of operations to expose on this component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/SqlOperationDefinition"
          }
        }
      },
      "required": []
    },

    "SqlOperationDefinition": {
      "$anchor": "#v1/SqlOperationDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration required by the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "outputs": {
          "description": "Types of the outputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "query": {
          "description": "The query to execute.",

          "type": "string"
        },
        "arguments": {
          "description": "The arguments to the query, defined as a list of input names.",

          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": []
    },

    "HttpClientComponent": {
      "$anchor": "#v1/HttpClientComponent",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the collection",
          "enum": ["wick/component/http@v1"]
        },
        "resource": {
          "description": "The URL base to use.",

          "type": "string"
        },
        "codec": {
          "description": "The codec to use when encoding/decoding data. Can be overridden by individual operations.",
          "required": false,

          "$ref": "#/$defs/v1/Codec"
        },
        "operations": {
          "description": "A list of operations to expose on this component.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/HttpClientOperationDefinition"
          }
        }
      },
      "required": []
    },

    "HttpClientOperationDefinition": {
      "$anchor": "#v1/HttpClientOperationDefinition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation.",

          "type": "string"
        },
        "with": {
          "description": "Any configuration required by the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "inputs": {
          "description": "Types of the inputs to the operation.",

          "type": "array",
          "items": {
            "$ref": "#/$defs/v1/Field"
          }
        },
        "method": {
          "description": "The HTTP method to use.",

          "$ref": "#/$defs/v1/HttpMethod"
        },
        "codec": {
          "description": "The codec to use when encoding/decoding data.",
          "required": false,

          "$ref": "#/$defs/v1/Codec"
        },
        "headers": {
          "description": "Any headers to add to the request.",

          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9][a-zA-Z0-9_]*": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "body": {
          "description": "The body to send, processed as a structured JSON liquid template.",
          "required": false,

          "type": "object"
        },
        "path": {
          "description": "The path to append to our base URL, processed as a liquid template with each input as part of the template data.",

          "type": "string"
        }
      },
      "required": []
    },

    "Codec": {
      "$anchor": "#v1/Codec",
      "enum": ["Json", "Raw", "FormData"]
    },

    "HttpMethod": {
      "$anchor": "#v1/HttpMethod",
      "enum": ["Get", "Post", "Put", "Delete"]
    }
  }
}
