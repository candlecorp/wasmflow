{
  "title": "JSON schema for Wick host manifests",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "$defs": {
    "v0": {
      "HostManifest": {
        "$anchor": "#v0/HostManifest",
        "additionalProperties": false,
        "properties": {
          "format": {
            "description": "The configuration manifest format.",
            "type": "number"
          },
          "version": {
            "description": "The version of the configuration.",
            "type": "string"
          },
          "host": {
            "description": "Additional host configuration.",
            "$ref": "#/$defs/v0/HostConfig"
          },
          "network": {
            "description": "The configuration for a Wick network.",
            "$ref": "#/$defs/v0/NetworkManifest"
          },
          "default_schematic": {
            "description": "The default schematic to execute if none is provided.",
            "required": false,
            "type": "string"
          }
        },
        "required": [
          "format"
        ]
      },
      "HostConfig": {
        "$anchor": "#v0/HostConfig",
        "additionalProperties": false,
        "properties": {
          "allow_latest": {
            "description": "Whether or not to allow the :latest tag on remote artifacts.",
            "type": "boolean"
          },
          "insecure_registries": {
            "description": "A list of registries to connect to insecurely (over HTTP vs HTTPS).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeout": {
            "description": "The timeout for network requests (in ms).",
            "type": "number"
          },
          "id": {
            "description": "The ID for this host, used to identify the host over the mesh.",
            "required": false,
            "type": "string"
          },
          "expose": {
            "description": "The schematics to expose via RPC or the mesh, if any.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mesh": {
            "description": "The mesh configuration.",
            "required": false,
            "$ref": "#/$defs/v0/MeshConfig"
          },
          "rpc": {
            "description": "Configuration for the GRPC server.",
            "required": false,
            "$ref": "#/$defs/v0/HttpConfig"
          },
          "http": {
            "description": "Configuration for the HTTP 1 server (development only).",
            "required": false,
            "$ref": "#/$defs/v0/HttpConfig"
          }
        },
        "required": []
      },
      "HttpConfig": {
        "$anchor": "#v0/HttpConfig",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "description": "Enable/disable the server.",
            "type": "boolean"
          },
          "port": {
            "description": "The port to bind to.",
            "required": false,
            "type": "number"
          },
          "address": {
            "description": "The address to bind to.",
            "required": false,
            "type": "string"
          },
          "pem": {
            "description": "Path to pem file for TLS.",
            "required": false,
            "type": "string"
          },
          "key": {
            "description": "Path to key file for TLS.",
            "required": false,
            "type": "string"
          },
          "ca": {
            "description": "Path to CA file.",
            "required": false,
            "type": "string"
          }
        },
        "required": []
      },
      "MeshConfig": {
        "$anchor": "#v0/MeshConfig",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "description": "Enable/disable the mesh connection.",
            "type": "boolean"
          },
          "address": {
            "description": "The address of the NATS server.",
            "type": "string"
          },
          "creds_path": {
            "description": "The path to the NATS credsfile.",
            "required": false,
            "type": "string"
          },
          "token": {
            "description": "The NATS token.",
            "required": false,
            "type": "string"
          }
        },
        "required": []
      },
      "NetworkManifest": {
        "$anchor": "#v0/NetworkManifest",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The unique identifier for this Network.",
            "required": false,
            "type": "string"
          },
          "labels": {
            "description": "The labels that apply to this network.",
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9][a-zA-Z0-9_]*": {
                "type": "string"
              }
            }
          },
          "triggers": {
            "description": "The collection to use as the entrypoint when running as a standalone process.",
            "required": false,
            "$ref": "#/$defs/v0/EntrypointDefinition"
          },
          "schematics": {
            "description": "The links between capabilities and components.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v0/SchematicManifest"
            }
          },
          "collections": {
            "description": "A list of component collections.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v0/CollectionDefinition"
            }
          }
        },
        "required": []
      },
      "EntrypointDefinition": {
        "$anchor": "#v0/EntrypointDefinition",
        "additionalProperties": false,
        "properties": {
          "reference": {
            "description": "The reference/location of the collection.",
            "type": "string"
          },
          "component": {
            "description": "The component to use as the entrypoint.",
            "type": "string"
          },
          "data": {
            "description": "Data or configuration used to initialize the collection.",
            "type": "object"
          }
        },
        "required": []
      },
      "CollectionDefinition": {
        "$anchor": "#v0/CollectionDefinition",
        "additionalProperties": false,
        "properties": {
          "namespace": {
            "description": "The local namespace for the collection.",
            "type": "string"
          },
          "kind": {
            "description": "The kind/type of the collection.",
            "$ref": "#/$defs/v0/CollectionKind"
          },
          "reference": {
            "description": "The reference/location of the collection.",
            "type": "string"
          },
          "data": {
            "description": "Data or configuration used to initialize the collection.",
            "type": "object"
          }
        },
        "required": []
      },
      "CollectionKind": {
        "$anchor": "#v0/CollectionKind",
        "enum": [
          "Native",
          "GrpcUrl",
          "WaPC",
          "Network"
        ]
      },
      "SchematicManifest": {
        "$anchor": "#v0/SchematicManifest",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Schematic name.",
            "type": "string"
          },
          "collections": {
            "description": "A list of collections the schematic uses.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "instances": {
            "description": "A map from component reference to its target.",
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9][a-zA-Z0-9_]*": {
                "$ref": "#/$defs/v0/ComponentDefinition"
              }
            }
          },
          "connections": {
            "description": "A list of connections from component to component.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v0/ConnectionDefinition"
            }
          },
          "constraints": {
            "description": "A map of constraints and values that limit where this schematic can run.",
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9][a-zA-Z0-9_]*": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "ComponentDefinition": {
        "$anchor": "#v0/ComponentDefinition",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The ID of the component (i.e. the alias, key, or namespace).",
            "type": "string"
          },
          "data": {
            "description": "Data to associate with the reference.",
            "required": false,
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "ConnectionDefinition": {
        "$anchor": "#v0/ConnectionDefinition",
        "additionalProperties": false,
        "properties": {
          "from": {
            "description": "The originating component from upstream.",
            "$ref": "#/$defs/v0/ConnectionTargetDefinition"
          },
          "to": {
            "description": "The destination component (downstream).",
            "$ref": "#/$defs/v0/ConnectionTargetDefinition"
          }
        },
        "required": []
      },
      "ConnectionTargetDefinition": {
        "$anchor": "#v0/ConnectionTargetDefinition",
        "additionalProperties": false,
        "properties": {
          "instance": {
            "description": "The instance name of the referenced component.",
            "type": "string"
          },
          "port": {
            "description": "The component&#x27;s port.",
            "type": "string"
          },
          "data": {
            "description": "Data to associate with a connection.",
            "required": false,
            "type": "object"
          }
        },
        "required": [
          "instance",
          "port"
        ]
      }
    },
    "v1": {
      "WickConfig": {
        "oneOf": [
          {
            "$ref": "#/$defs/v1/AppConfiguration"
          },
          {
            "$ref": "#/$defs/v1/ComponentConfiguration"
          }
        ]
      },
      "AppConfiguration": {
        "$anchor": "#v1/AppConfiguration",
        "additionalProperties": false,
        "properties": {
          "format": {
            "description": "The configuration version.",
            "type": "number"
          },
          "metadata": {
            "description": "Associated metadata for this component.",
            "required": false,
            "$ref": "#/$defs/v1/AppMetadata"
          },
          "name": {
            "description": "The application&#x27;s name.",
            "type": "string"
          },
          "import": {
            "description": "Components to import into the application&#x27;s scope.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/ComponentBinding"
            }
          },
          "resources": {
            "description": "Resources that the application can access.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/ResourceBinding"
            }
          },
          "triggers": {
            "description": "Configured triggers that drive the application&#x27;s behavior.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/TriggerDefinition"
            }
          }
        },
        "required": [
          "format"
        ]
      },
      "AppMetadata": {
        "$anchor": "#v1/AppMetadata",
        "additionalProperties": false,
        "properties": {
          "version": {
            "description": "The version of the application.",
            "type": "string"
          }
        },
        "required": []
      },
      "TriggerDefinition": {
        "oneOf": [
          {
            "$ref": "#/$defs/v1/CliTrigger"
          },
          {
            "$ref": "#/$defs/v1/HttpTrigger"
          }
        ]
      },
      "CliTrigger": {
        "$anchor": "#v1/CliTrigger",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/trigger/cli@v1"
            ]
          },
          "operation": {
            "description": "The operation that will act as the main entrypoint for this trigger.",
            "$ref": "#/$defs/v1/ComponentOperationExpression"
          },
          "app": {
            "description": "The component that provides additional logic.",
            "required": false,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/v1/ComponentDefinition"
              }
            ]
          }
        },
        "required": [
          "operation"
        ]
      },
      "ComponentOperationExpression": {
        "$anchor": "#v1/ComponentOperationExpression",
        "additionalProperties": false,
        "properties": {
          "component": {
            "description": "The component that exports the operation.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/v1/ComponentDefinition"
              }
            ]
          },
          "name": {
            "description": "The operation to call.",
            "type": "string"
          }
        },
        "required": [
          "component",
          "name"
        ]
      },
      "HttpTrigger": {
        "$anchor": "#v1/HttpTrigger",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/trigger/http@v1"
            ]
          },
          "resource": {
            "description": "The TcpPort reference to listen on for connections.",
            "type": "string"
          },
          "routers": {
            "description": "The HttpRouters that should handle incoming requests",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/HttpRouter"
            }
          }
        },
        "required": []
      },
      "HttpRouter": {
        "oneOf": [
          {
            "$ref": "#/$defs/v1/RawRouter"
          },
          {
            "$ref": "#/$defs/v1/RestRouter"
          }
        ]
      },
      "RestRouter": {
        "$anchor": "#v1/RestRouter",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/router/rest@v1"
            ]
          },
          "path": {
            "description": "The path to start serving this router from.",
            "type": "string"
          },
          "component": {
            "description": "The component to expose as a Rest API.",
            "$ref": "#/$defs/v1/ComponentDefinition"
          }
        },
        "required": [
          "path",
          "component"
        ]
      },
      "RawRouter": {
        "$anchor": "#v1/RawRouter",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/router/raw@v1"
            ]
          },
          "path": {
            "description": "The path to start serving this router from.",
            "type": "string"
          },
          "operation": {
            "description": "The operation that handles HTTP requests.",
            "$ref": "#/$defs/v1/ComponentOperationExpression"
          }
        },
        "required": [
          "path",
          "operation"
        ]
      },
      "ResourceDefinition": {
        "oneOf": [
          {
            "$ref": "#/$defs/v1/TcpPort"
          },
          {
            "$ref": "#/$defs/v1/UdpPort"
          }
        ]
      },
      "TcpPort": {
        "$anchor": "#v1/TcpPort",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/resource/tcpport@v1"
            ]
          },
          "port": {
            "description": "The port to bind to.",
            "type": "number"
          },
          "address": {
            "description": "The address to bind to.",
            "type": "string"
          }
        },
        "required": []
      },
      "UdpPort": {
        "$anchor": "#v1/UdpPort",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "wick/resource/udpport@v1"
            ]
          },
          "port": {
            "description": "The port to bind to.",
            "type": "number"
          },
          "address": {
            "description": "The address to bind to.",
            "type": "string"
          }
        },
        "required": []
      },
      "ComponentConfiguration": {
        "$anchor": "#v1/ComponentConfiguration",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of this component.",
            "required": false,
            "type": "string"
          },
          "format": {
            "description": "The component manifest format version",
            "type": "number"
          },
          "metadata": {
            "description": "Associated metadata for this component.",
            "required": false,
            "$ref": "#/$defs/v1/ComponentMetadata"
          },
          "host": {
            "description": "Configuration for the host when this manifest is run directly.",
            "$ref": "#/$defs/v1/HostConfig"
          },
          "labels": {
            "description": "The labels and values that apply to this manifest.",
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9][a-zA-Z0-9_]*": {
                "type": "string"
              }
            }
          },
          "types": {
            "description": "Additional types to export and make available to the component.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/TypeDefinition"
            }
          },
          "import": {
            "description": "Components to import into the application&#x27;s scope.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/ComponentBinding"
            }
          },
          "operations": {
            "description": "A map of operation names to their definitions.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/OperationDefinition"
            }
          }
        },
        "required": [
          "format"
        ]
      },
      "ComponentMetadata": {
        "$anchor": "#v1/ComponentMetadata",
        "additionalProperties": false,
        "properties": {
          "version": {
            "description": "The version of the component.",
            "type": "string"
          }
        },
        "required": []
      },
      "ResourceBinding": {
        "$anchor": "#v1/ResourceBinding",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the binding.",
            "type": "string"
          },
          "resource": {
            "description": "The resource to bind to.",
            "$ref": "#/$defs/v1/ResourceDefinition"
          }
        },
        "required": [
          "name",
          "resource"
        ]
      },
      "ComponentBinding": {
        "$anchor": "#v1/ComponentBinding",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the binding.",
            "type": "string"
          },
          "component": {
            "description": "The component to bind to.",
            "$ref": "#/$defs/v1/ComponentDefinition"
          }
        },
        "required": [
          "name",
          "component"
        ]
      },
      "ComponentDefinition": {
        "oneOf": [
          {
            "$ref": "#/$defs/v1/WasmComponent"
          },
          {
            "$ref": "#/$defs/v1/GrpcUrlComponent"
          },
          {
            "$ref": "#/$defs/v1/ManifestComponent"
          },
          {
            "$ref": "#/$defs/v1/ComponentReference"
          }
        ]
      },
      "ComponentReference": {
        "$anchor": "#v1/ComponentReference",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "Reference"
            ]
          },
          "id": {
            "description": "The id of the component to reference.",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "HostConfig": {
        "$anchor": "#v1/HostConfig",
        "additionalProperties": false,
        "properties": {
          "allow_latest": {
            "description": "Whether or not to allow the :latest tag on remote artifacts.",
            "type": "boolean"
          },
          "insecure_registries": {
            "description": "A list of registries to connect to insecurely (over HTTP vs HTTPS).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeout": {
            "description": "The timeout for network requests (in ms).",
            "type": "number"
          },
          "rpc": {
            "description": "Configuration for the GRPC server.",
            "required": false,
            "$ref": "#/$defs/v1/HttpConfig"
          }
        },
        "required": []
      },
      "HttpConfig": {
        "$anchor": "#v1/HttpConfig",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "description": "Enable/disable the server.",
            "type": "boolean"
          },
          "port": {
            "description": "The port to bind to.",
            "required": false,
            "type": "number"
          },
          "address": {
            "description": "The address to bind to.",
            "required": false,
            "type": "string"
          },
          "pem": {
            "description": "Path to pem file for TLS.",
            "required": false,
            "type": "string"
          },
          "key": {
            "description": "Path to key file for TLS.",
            "required": false,
            "type": "string"
          },
          "ca": {
            "description": "Path to CA file.",
            "required": false,
            "type": "string"
          }
        },
        "required": []
      },
      "WasmComponent": {
        "$anchor": "#v1/WasmComponent",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "Wasm"
            ]
          },
          "ref": {
            "description": "The URL (and optional tag) or local file path to find the .wasm module.",
            "type": "string"
          },
          "permissions": {
            "description": "Permissions to give this component",
            "$ref": "#/$defs/v1/Permissions"
          },
          "config": {
            "description": "Per-component configuration.",
            "type": "object"
          }
        },
        "required": [
          "ref"
        ]
      },
      "Permissions": {
        "$anchor": "#v1/Permissions",
        "additionalProperties": false,
        "properties": {
          "dirs": {
            "description": "A map of from internal directory to external directory that this component should be able to access.",
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9][a-zA-Z0-9_]*": {
                "type": "string"
              }
            }
          }
        },
        "required": []
      },
      "GrpcUrlComponent": {
        "$anchor": "#v1/GrpcUrlComponent",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "GrpcUrl"
            ]
          },
          "url": {
            "description": "The GRPC URL to connect to.",
            "type": "string"
          },
          "config": {
            "description": "Any configuration necessary for the component.",
            "type": "object"
          }
        },
        "required": [
          "url"
        ]
      },
      "ManifestComponent": {
        "$anchor": "#v1/ManifestComponent",
        "additionalProperties": false,
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind of the collection",
            "enum": [
              "Manifest"
            ]
          },
          "ref": {
            "description": "The URL (and optional tag) or local file path to find the manifest.",
            "type": "string"
          },
          "config": {
            "description": "Any configuration necessary for the component.",
            "type": "object"
          }
        },
        "required": [
          "ref"
        ]
      },
      "OperationDefinition": {
        "$anchor": "#v1/OperationDefinition",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the operation.",
            "type": "string"
          },
          "inputs": {
            "description": "Types of the inputs to the operation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/Field"
            }
          },
          "outputs": {
            "description": "Types of the outputs to the operation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/Field"
            }
          },
          "components": {
            "description": "A list of components the schematic can use.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "instances": {
            "description": "A map of IDs to specific operation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/InstanceBinding"
            }
          },
          "flow": {
            "description": "A list of connections from operation to operation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/v1/ConnectionDefinition"
            }
          }
        },
        "required": []
      },
      "Field": {
        "type": "object"
      },
      "TypeDefinition": {
        "type": "object"
      },
      "InstanceBinding": {
        "$anchor": "#v1/InstanceBinding",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the binding.",
            "type": "string"
          },
          "operation": {
            "description": "The operation to bind to.",
            "$ref": "#/$defs/v1/ComponentOperationExpression"
          },
          "config": {
            "description": "Data to associate with the reference, if any.",
            "required": false,
            "type": "object"
          }
        },
        "required": [
          "name",
          "operation"
        ]
      },
      "ConnectionDefinition": {
        "$anchor": "#v1/ConnectionDefinition",
        "additionalProperties": false,
        "properties": {
          "from": {
            "description": "The upstream operation port.",
            "$ref": "#/$defs/v1/ConnectionTargetDefinition"
          },
          "to": {
            "description": "The downstream operation port.",
            "$ref": "#/$defs/v1/ConnectionTargetDefinition"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "ConnectionTargetDefinition": {
        "$anchor": "#v1/ConnectionTargetDefinition",
        "additionalProperties": false,
        "properties": {
          "instance": {
            "description": "The instance ID of the operation.",
            "type": "string"
          },
          "port": {
            "description": "The operation port.",
            "type": "string"
          },
          "data": {
            "description": "The default value to provide on this connection in the event of an error.",
            "required": false,
            "type": "object"
          }
        },
        "required": [
          "instance",
          "port"
        ]
      }
    }
  },
  "oneOf": [
    {
      "$ref": "#/$defs/v1/WickConfig"
    },
    {
      "$ref": "#/$defs/v0/HostManifest"
    }
  ]
}
