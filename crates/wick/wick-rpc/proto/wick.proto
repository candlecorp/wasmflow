syntax = "proto3";

package wick;

service InvocationService {
  rpc Invoke(stream InvocationRequest) returns (stream Packet);
  rpc List(ListRequest) returns (ListResponse);
  rpc Stats(StatsRequest) returns (StatsResponse);
}

message InvocationRequest {
  oneof data {
    Invocation invocation = 1;
    Packet packet = 2;
  }
}

message Invocation {
  string origin = 1;
  string target = 2;
  string id = 4;
  string tx_id = 5;
  InherentData inherent = 6;
}

message Packet {
  Metadata metadata = 1;
  oneof data {
    Ok ok = 2;
    Err err = 3;
  }
}

message Metadata {
  string port = 1;
  uint32 index = 2;
  uint32 flags = 3;
}

message Ok {
  oneof data {
    bytes messagepack = 1;
    string json = 3;
  }
}

message Err {
  string message = 1;
  uint32 code = 2;
}

message InherentData {
  uint64 seed = 1;
  uint64 timestamp = 2;
}

message ListRequest {}
message ListResponse { repeated HostedType schemas = 1; }

message HostedType {
  oneof type { CollectionSignature collection = 1; }
}

message Component {
  enum ComponentKind {
    Component = 0;
    Schematic = 1;
  }
  string name = 1;
  ComponentKind kind = 2;
  map<string, TypeSignature> inputs = 3;
  map<string, TypeSignature> outputs = 4;
  uint32 index = 5;
}

message CollectionSignature {
  string name = 1;
  CollectionFeatures features = 8;
  string version = 2;
  uint32 format = 6;
  map<string, Component> components = 3;
  map<string, TypeDefinition> types = 4;
  map<string, TypeDefinition> config = 5;
  repeated WellKnownSchema wellknown = 7;
}

message CollectionFeatures {
  bool streaming = 1;
  bool stateful = 2;
  uint32 version = 3;
}

message TypeDefinition {
  oneof type {
    StructSignature struct = 1;
    EnumSignature enum = 2;
  }
}

message WellKnownSchema {
  repeated string capabilities = 1;
  string url = 2;
  CollectionSignature schema = 3;
}

message StatsRequest {}
message StatsResponse { repeated Statistic stats = 1; }

message Statistic {
  string name = 1;
  uint32 runs = 2;
  uint32 errors = 3;
  DurationStatistics execution_statistics = 4;
}

message DurationStatistics {
  uint64 min = 1;
  uint64 max = 2;
  uint64 average = 3;
  uint64 total = 4;
}

message StructSignature {
  string name = 1;
  map<string, TypeSignature> fields = 2;
}

message EnumSignature {
  string name = 1;
  repeated EnumVariant values = 2;
}

message EnumVariant {
  string name = 1;
  uint32 index = 2;
}

message TypeSignature {
  oneof signature {
    SimpleType simple = 1;
    MapType map = 2;
    InnerType list = 3;
    InnerType optional = 4;
    RefType ref = 5;
    LinkType link = 6;
    InternalType internal = 7;
    StructType struct = 8;
    InnerType stream = 9;
    AnonymousStruct anonymous_struct = 10;
    string custom = 11;
  }
}

message AnonymousStruct { map<string, TypeSignature> fields = 1; }

message SimpleType {
  enum PrimitiveType {
    I8 = 0;
    U8 = 1;
    I16 = 2;
    U16 = 3;
    I32 = 4;
    U32 = 5;
    I64 = 6;
    U64 = 7;
    F32 = 8;
    F64 = 9;
    BOOL = 10;
    STRING = 11;
    DATETIME = 12;
    BYTES = 13;
    VALUE = 15;
  }
  PrimitiveType type = 1;
}

enum InternalType {
  ComponentInput = 0;
}

message RefType { string ref = 1; }

message StructType {}

message LinkType { repeated string schemas = 1; }

message MapType {
  TypeSignature keyType = 1;
  TypeSignature valueType = 2;
}

message InnerType { TypeSignature type = 1; }
