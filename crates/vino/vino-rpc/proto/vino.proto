syntax = "proto3";

package vino;

service InvocationService {
  rpc Invoke(Invocation) returns (stream Output);
  rpc List(ListRequest) returns (ListResponse);
  rpc Stats(StatsRequest) returns (StatsResponse);
}

message MessageKind {
  enum Kind {
    Invalid = 0;
    Error = 1;
    Exception = 2;
    Test = 3;
    MessagePack = 4;
    Signal = 5;
    JSON = 6;
  }

  enum OutputSignal {
    Done = 0;
    OpenBracket = 1;
    CloseBracket = 2;
  }

  Kind kind = 1;

  oneof data {
    bytes messagepack = 2;
    string message = 3;
    OutputSignal signal = 4;
    string json = 5;
  }
}

message Invocation {
  string origin = 1;
  string target = 2;
  map<string, MessageKind> payload = 3;
  string id = 4;
  string tx_id = 5;
  InherentData inherent = 6;
}

message InherentData {
  uint64 seed = 1;
  uint64 timestamp = 2;
}

message Output {
  string port = 1;
  string invocation_id = 2;
  MessageKind payload = 3;
}

message ListRequest {}
message ListResponse { repeated HostedType schemas = 1; }

message HostedType {
  oneof type {
    ProviderSignature provider = 1;
  }
}

message Component {
  enum ComponentKind {
    Component = 0;
    Schematic = 1;
  }
  string name = 1;
  ComponentKind kind = 2;
  map<string, TypeSignature> inputs = 3;
  map<string, TypeSignature> outputs = 4;
}

message ProviderSignature {
  string name = 1;
  map<string, StructSignature> types = 6;
  map<string, Component> components = 2;
}

message StatsRequest {}
message StatsResponse { repeated Statistic stats = 1; }

message Statistic {
  string name = 1;
  uint32 runs = 2;
  uint32 errors = 3;
  DurationStatistics execution_statistics = 4;
 }

message DurationStatistics {
  uint64 min = 1;
  uint64 max = 2;
  uint64 average = 3;
}

message StructSignature {
  string name = 1;
  map<string, TypeSignature> fields = 2;
}

message TypeSignature {
  oneof signature {
    SimpleType simple = 1;
    MapType map = 2;
    ListType list = 3;
    OptionalType optional = 4;
    RefType ref = 5;
    LinkType link = 6;
    InternalType internal = 7;
  }
}

message SimpleType {
  enum WidlType {
    I8 = 0;
    U8 = 1;
    I16 = 2;
    U16 = 3;
    I32 = 4;
    U32 = 5;
    I64 = 6;
    U64 = 7;
    F32 = 8;
    F64 = 9;
    BOOL = 10;
    STRING = 11;
    DATETIME = 12;
    BYTES = 13;
    RAW = 14;
    VALUE = 15;
  }
  WidlType type = 1;
}

enum InternalType {
  ComponentInput = 0;
}

message RefType {
  string ref = 1;
}

message LinkType {
  string provider = 1;
}

message MapType {
  TypeSignature keyType = 1;
  TypeSignature valueType = 2;
}

message ListType {
  TypeSignature type = 1;
}

message OptionalType {
  TypeSignature type = 1;
}
